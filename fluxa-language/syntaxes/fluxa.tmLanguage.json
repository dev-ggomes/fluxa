{
  "scopeName": "source.fluxa",
  "name": "Fluxa",
  "patterns": [
    {
      "begin": "\\bdef\\b\\s+([a-zA-Z_][a-zA-Z0-9_]*)",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.fluxa"
        },
        "1": {
          "name": "entity.name.function.fluxa"
        }
      },
      "end": "(?=\\()"
    },
    {
      "begin": "\\bfunc\\b\\s+([a-zA-Z_][a-zA-Z0-9_)*]",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.fluxa"
        },
        "1": {
          "name": "entity.name.function.fluxa"
        }
      },
      "end": "(?=\\()"
    },
    {
      "name": "keyword.control.fluxa",
      "match": "\\b(let|print|if|else|elif|for|while|return|import|from|as)\\b"
    },
    {
      "name": "constant.language.fluxa",
      "match": "\\b(true|false|null)\\b"
    },
    {
      "name": "constant.numeric.fluxa",
      "match": "\\b\\d+(\\.\\d+)?\\b"
    },
    {
      "name": "string.quoted.double.fluxa",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.fluxa"
        }
      ]
    },
    {
      "name": "string.quoted.single.fluxa",
      "match": "'([^'\\\\]|\\\\.)*'"
    },
    {
      "name": "comment.line.number-sign.fluxa",
      "match": "#.*$"
    },
    {
      "name": "comment.block.fluxa",
      "begin": "/\\*",
      "end": "\\*/",
      "patterns": []
    },
    {
      "name": "variable.assignment.fluxa",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b(?=\\s*=)"
    },
    {
      "name": "variable.other.fluxa",
      "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
    },
    {
      "name": "punctuation.separator.fluxa",
      "match": "[=:\\[\\]\\{\\}\\(\\),\\.]"
    }
  ],
  "repository": {},
  "fileTypes": ["fx"],
  "uuid": "b11ee2d8-aaaa-4bbb-cccc-ddddeeeeffff"
}